Github link https://github.com/AlexeyStrelkov/V.Ksendzov_course_QA


JSON

 4. Создать внешний репозиторий c названием JSON === на github.com нажимаем кнопку "create new repo" или просто "new"
 
 5. Клонировать репозиторий JSON на локальный компьютер === git clone "ссылка на репозиторий"
 
 6. Внутри локального JSON создать файл “new.json” === touch new.json
 
 7. Добавить файл под гит === git add new.json
 
 8. Закоммитить файл === git commit -m "комментарий к коммиту"
 
 9. Отправить файл на внешний GitHub репозиторий === git push
 
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, 
     будущая желаемая зарплата). Всё написать в формате JSON === редактируем файл через vim
     
        {
	    "name":"Alexey",
	    "lastname":"Strelkov",
	    "number_of_pets":1,
	    "future_desired_salary":"1000$"
        }
     
 11. Отправить изменения на внешний репозиторий === git commit -am "комментарий" затем git push
 
 12. Создать файл preferences.json === cat > preferences.json
 
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, 
     любимое время года, сторона которую хотели бы посетить) в формате JSON === редактируем файл через cat
     
        {
	    "favorite_movie":"Transformers",
	    "favorite_se_series":"Breaking bad",
	    "favorite_food":"Sausage in dough",
	    "favorite_season":"Winter",
	    "country_like_to_visit":"Japan"
        }
     
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON === > sklls.json 
     и редактируем любым способом
     
        {
	    "skills":[
	    "fundamentals of the theory",
	    "HTTP",
	    "JSON",
	    "XML",
	    "API",
	    "Dev Tools",
	    "and more"]
        }
     
 15. Отправить сразу 2 файла на внешний репозиторий === git add . затем git commit -m "комментарий", затем git push
 
 16. На веб интерфейсе создать файл bug_report.json === создаем на github.com в своем репозитории файл bug_report.json
 
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе === сохраняем на сайте добавив комментарий в commit
 
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON === редактируем файл на сайте github
 
        {
        "Summary":"Item not added to cart",
        "Steps to reproduce":{
        "step 1":"on the product page go to the product card",
        "step 2":"click the 'add to cart' button" },
        "Expected result":"The product is added to the cart on the product description page after selecting the 'Add to Cart' button",
        "Actual result":"Product is not added to cart on the product description page after selecting 'Add to Cart' button"
        }
 
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе === сохраняем на сайте добавив комментарий в commit
 
 20. Синхронизировать внешний и локальный репозиторий JSON === git pull



XML

 21. Создать внешний репозиторий c названием XML === на github.com нажимаем кнопку "create new repo" или просто "new"
 
 22. Клонировать репозиторий XML на локальный компьютер === git clone "ссылка на репозиторий"
 
 23. Внутри локального XML создать файл “new.xml” === touch new.xml
 
 24. Добавить файл под гит === git add new.xml
 
 25. Закоммитить файл === git commit -m "комментарий"
 
 26. Отправить файл на внешний GitHub репозиторий === git push 
 
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, 
     будущая желаемая зарплата). Всё написать в формате XML === редактируем файл в vim
     
        <name>Alexey</name>
        <lastname>Strelkov</lastname>
        <number_of_pets>1</number_of_pets>
        <future_desired_salary>1000$</future_desired_salary>     
     
 28. Отправить изменения на внешний репозиторий === git add . затем git commit -m "комментарий", затем git push
 
 29. Создать файл preferences.xml === touch preferences.xml
 
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, 
     любимое время года, сторона которую хотели бы посетить) в формате XML === редактируем файл в vim
     
        <favorite_movie>Transformers</favorite_movie>
        <favorite_se_series>Breaking bad</favorite_se_series>
        <favorite_food>Sausage in dough</favorite_food>
        <favorite_season>Winter</favorite_season>
        <country_like_to_visit>Japan</country_like_to_visit>      
     
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML === touch sklls.xml 
     и редактируем файл в vim
     
        <skills>
	       <skill_1>fundamentals of the theory</skill_1>
	       <skill_2>HTTP</skill_2>
	       <skill_3>JSON</skill_3>
	       <skill_4>XML</skill_4>
	       <skill_5>API</skill_5>
	       <skill_6>Dev Tools</skill_6>
	       <skill_more>and more</skill_more>
        </skills>      
     
 32. Сделать коммит в одну строку === git add . | git commit -m "комментарий"
 
 33. Отправить сразу 2 файла на внешний репозиторий === git push
 
 34. На веб интерфейсе создать файл bug_report.xml === создаем на github.com в своем репозитории файл bug_report.xml
 
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе === сохраняем на сайте добавив комментарий в commit
 
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML === редактируем файл на сайте github
 
        <Summary>Item not added to cart</Summary>
        <Steps to reproduce>
            <step 1>on the product page go to the product card</step 1>
            <step 2>click the 'add to cart' button<step 2>
        </Steps to reproduce>
        <Expected result>The product is added to the cart on the product description page after selecting the 'Add to Cart' button</Expected result>
        <Actual result>Product is not added to cart on the product description page after selecting 'Add to Cart' button</Actual result>
 
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе === сохраняем на сайте добавив комментарий в commit
 
 38. Синхронизировать внешний и локальный репозиторий XML === git pull
 
 
TXT

 1. Создать внешний репозиторий c названием TXT === на github.com нажимаем кнопку "create new repo" или просто "new"
 
 2. Клонировать репозиторий TXT на локальный компьютер === git clone "ссылка на репозиторий"
 
 3. Внутри локального TXT создать файл “new.txt” === touch new.txt
 
 4. Добавить файл под гит === git add new.txt
 
 5. Закоммитить файл === git commit -m "комментарий"
 
 6. Отправить файл на внешний GitHub репозиторий === git push 
 
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, 
     будущая желаемая зарплата). Всё написать в формате TXT === редактируем файл в vim
     
        Name - Alexey.
        Lastname - Strelkov.
        Number of pets - 1.
        Future desired salary - 1000$     
     
 8. Отправить изменения на внешний репозиторий === git add . затем git commit -m "комментарий", затем git push 
 
 9. Создать файл preferences.txt === touch preferences.txt
 
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, 
     любимое время года, сторона которую хотели бы посетить) в формате TXT === редактируем файл в vim
     
        Favorite movie - Transformers.
        Favorite se series - Breaking bad.
        Favorite food - Sausage in dough.
        Favorite season - Winter.
        Country like to visit - Japan.     
     
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT === touch sklls.txt 
     и редактируем файл в vim
     
        Skills:
	       - fundamentals of the theory,
	       - HTTP,
	       - JSON,
	       - XML,
	       - API,
	       - Dev Tools,
	       - and more.     
     
 12. Сделать коммит в одну строку === git add . | git commit -m "комментарий"
 
 13. Отправить сразу 2 файла на внешний репозиторий === git push
 
 14. На веб интерфейсе создать файл bug_report.txt === создаем на github.com в своем репозитории файл bug_report.txt
 
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе === сохраняем на сайте добавив комментарий в commit
 
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT === редактируем файл на сайте github
 
        1) Summary - Item not added to cart.
        2) Steps to reproduce:
            step 1 - on the product page go to the product card;
            step 2 - click the 'add to cart' button.
        3) Expected result - The product is added to the cart on the product description page after selecting the 'Add to Cart' button.
        4) Actual result - Product is not added to cart on the product description page after selecting 'Add to Cart' button. 
 
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе === сохраняем на сайте добавив комментарий в commit
 
 18. Синхронизировать внешний и локальный репозиторий TXT === git pull